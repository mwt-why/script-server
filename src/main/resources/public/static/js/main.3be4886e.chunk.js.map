{"version":3,"sources":["http/httpUtil.js","pages/script/Script.jsx","http/api.js","pages/model/Model.jsx","pages/Dashboard.jsx","pages/task/TaskManage.jsx","pages/task/SubTask.jsx","pages/resources/Device.jsx","pages/resources/Account.jsx","pages/Backhistory.jsx","index.js"],"names":["axios","defaults","baseURL","curRow","get","url","params","Promise","resolve","reject","then","res","data","catch","err","post","listScript","p","updateScript","d","put","Option","Select","columns","title","dataIndex","key","render","type","lastTrainTime","status","veiwCsv","id","Model","useState","setData","defaultCurrent","total","isModalVisible","setIsModalVisible","setType","modelList","setModelList","useEffect","queryData","queryModelZoo","className","dataSource","pagination","rowKey","record","dashed","style","float","size","onClick","showSizeChanger","visible","footer","onCancel","width","destroyOnClose","textAlign","Group","onChange","e","typeValue","target","value","marginTop","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","console","log","flag","message","success","error","onFinishFailed","warn","autoComplete","Item","label","rules","required","allowClear","map","m","min","max","offset","htmlType","ConfigColumns","isDefault","Script","configData","setConfigData","configTitle","setConfigTitle","configType","setConfigType","curModal","setCurModal","length","config","add","cm","configModal","push","updateCondtion","createTime","Date","defaultValue","checkedChildren","unCheckedChildren","checked","scriptModal","height","background","showHeader","onRow","marginLeft","Dashboard","AccountManage","availableAccount","setAvailableAccount","availableDevice","setAvailableDevice","scriptList","setScriptList","queryAvailableAccount","queryAvailableDevice","color","s","step","takeTime","overTime","result","SubTask","Device","setTotal","currentPage","setCurrentPage","records","current","Account","content","number","totalElements","props","action","headers","authorization","info","file","fileList","icon","UploadOutlined","Sider","Layout","Content","SubMenu","Footer","Menu","routes","path","exact","main","TaskManage","Backhistory","theme","mode","to","padding","route","index","children","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3be4886e.chunk.js","sourcesContent":["import axios from 'axios';\nimport qs from 'qs';\n\naxios.defaults.baseURL = 'http://192.168.31.136:8080/:8080';\n\nexport const get = (url, params) => {\n    return new Promise((resolve, reject) => {\n        axios.get(url, {\n            params: params\n        }).then(res => {\n            resolve(res.data)\n        }).\n            catch(err => {\n                reject(err.data);\n            })\n    });\n}\n\nexport const post = (url, data) => {\n    return new Promise((resolve, reject) => {\n        axios.post(url, data).then(res => {\n            resolve(res.data)\n        }).\n            catch(err => {\n                reject(err.data);\n            })\n    });\n}\n\nexport const put = (url, data) => {\n    return new Promise((resolve, reject) => {\n        axios.put(url, data).then(res => {\n            resolve(res.data)\n        }).\n            catch(err => {\n                reject(err.data);\n            })\n    });\n}","import React, { useState, useEffect } from 'react'\nimport {\n    Table, Pagination, Button, Space, Form, Input,\n    Modal, message, Divider, Select, Radio, Switch\n} from 'antd';\nimport { listScript, addScript, updateScript } from '../../http/api';\nconst columns = [\n    {\n        title: 'id',\n        dataIndex: 'id',\n        key: 'id',\n    },\n    {\n        title: '名称',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: '状态',\n        dataIndex: 'status',\n        key: 'status',\n        render: (status) => {\n            if (status === 0) {\n                return '可用';\n            } else if (status === -1) {\n                return '不可用';\n            } else {\n                return '未知状态，请联系管理员';\n            }\n        }\n    },\n    {\n        title: '创建时间',\n        dataIndex: 'createTime',\n        key: 'createTime'\n    }\n];\nconst ConfigColumns = [\n    {\n        title: '名称',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: '类型',\n        dataIndex: 'type',\n        key: 'type'\n    },\n    {\n        title: '是否默认',\n        dataIndex: 'isDefault',\n        key: 'isDefault',\n        render: (isDefault) => {\n            return isDefault !== null ? '是' : '否';\n        }\n    },\n    {\n        title: '创建时间',\n        dataIndex: 'createTime',\n        key: 'createTime'\n    }\n];\n\nlet curRow;\nconst Script = () => {\n    const [data, setData] = useState([]);\n    const [configData, setConfigData] = useState([]);\n    const [configTitle, setConfigTitle] = useState('');\n    const [total, setTotal] = useState(0);\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [configType, setConfigType] = useState('bool');\n    const [curModal, setCurModal] = useState(0);\n\n    const defaultCurrent = 1;\n    useEffect(() => {\n        queryData();\n    }, []);\n    //--------------------------------请求操作--------------------------------------------\n    const queryData = () => {\n        listScript().then(res => {\n            if (res.flag === 0) {\n                let data = res.data\n                setData(data);\n                if (data.length !== 0) {\n                    curRow = data[0];\n                    setConfigData(curRow.config);\n                    setConfigTitle(data[0].name);\n                }\n            } else {\n                message.error(res.message);\n            }\n        })\n    }\n\n    //--------------------------------事件操作--------------------------------------------\n    const add = (cm) => {\n        setCurModal(cm);\n        setIsModalVisible(true);\n    }\n    const handleCancel = () => { setIsModalVisible(false) }\n    const scriptOnFinish = (values) => {\n        addScript(values).then(res => {\n            if (res.flag === 0) {\n                message.success(\"新增成功\");\n                setIsModalVisible(false);\n                queryData();\n            } else {\n                message.error(res.message);\n            }\n        })\n    }\n\n    const configOnFinish = (values) => {\n        let data = [];\n        if (configData == null || configData.length === 0) {\n            data.push(values);\n            setConfigData(data);\n        } else {\n            let d = {};\n            for (d of configData) { }\n            console.log(d);\n        }\n        debugger;\n        console.log(curRow);\n        let updateCondtion = {\n            id: curRow.id,\n            config: data,\n            createTime: new Date()\n        };\n        updateScript(updateCondtion).then(\n            res => {\n                if (res.flag === 0) {\n                    message.success('配置新增成功');\n                    setIsModalVisible(false);\n                    queryData();\n                } else {\n                    message.error(res.message);\n                }\n            }\n        )\n\n    }\n    const onChange = (e) => {\n        setConfigType(e.target.value);\n    }\n\n    //脚本配置\n    const configModal = <div >\n        <Form\n            name=\"basic\"\n            labelCol={{ span: 6 }}\n            wrapperCol={{ span: 16 }}\n            initialValues={{ remember: true }}\n            onFinish={configOnFinish}\n            autoComplete=\"off\"\n        >\n            <Form.Item\n                label=\"配置项名\"\n                name=\"name\"\n                rules={[{ required: true, message: '配置项名必填!' }]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                label=\"类型\"\n                name=\"type\"\n                rules={[{ required: true, message: '配置项类型必填!' }]}\n            >\n                <Space size={10}>\n                    <Radio.Group onChange={onChange} value={configType} defaultValue={'bool'}>\n                        <Radio value={'string'}>string</Radio>\n                        <Radio value={'bool'}>bool</Radio>\n                    </Radio.Group>\n                </Space>\n            </Form.Item>\n            <Form.Item\n                label=\"是否默认\"\n                name=\"isDefault\"\n                wrapperCol={{ offset: 1, span: 2 }}\n            >\n                <Switch checkedChildren=\"开启\" unCheckedChildren=\"关闭\" checked={true} />\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    新增\n                </Button>\n            </Form.Item>\n        </Form>\n    </div>;\n    //脚本管理\n    const scriptModal = <div>\n        <Form\n            name=\"basic\"\n            labelCol={{ span: 6 }}\n            wrapperCol={{ span: 16 }}\n            initialValues={{ remember: true }}\n            onFinish={scriptOnFinish}\n            autoComplete=\"off\"\n        >\n            <Form.Item\n                label=\"脚本名\"\n                name=\"name\"\n                rules={[{ required: true, message: '脚本名名必填!' }]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    新增\n                </Button>\n            </Form.Item>\n        </Form>\n    </div>;\n    return (<>\n        <div style={{ height: '100%' }}>\n            <div style={{ float: 'left', height: '95%', width: '45%', background: '#fff' }}>\n                <h1>脚本管理：</h1>\n                <div className='table'>\n                    <Table columns={columns} dataSource={data} pagination={false} showHeader={true} key='script' rowKey={record => record.id}\n                        onRow={record => {\n                            return {\n                                onClick: () => {\n                                    curRow = record;\n                                    setConfigTitle(record.name);\n                                    setConfigData(record.config)\n                                }, // 点击行\n                            };\n                        }}\n                    />\n                </div>\n                <Divider dashed />\n                <div style={{ float: 'left' }}>\n                    <Space size={10}>\n                        <Button type=\"primary\" onClick={() => { add(0) }}>新增脚本</Button>\n                        <Button type=\"primary\">修改脚本</Button>\n                        <Button type=\"primary\">删除脚本</Button>\n                    </Space>\n                </div >\n                <div style={{ float: 'right' }}><Pagination showSizeChanger defaultCurrent={defaultCurrent} total={total} /></div>\n            </div>\n            <div style={{ float: 'left', marginLeft: '10px', height: '95%', width: '54%', background: '#fff' }}>\n                <h1>{configTitle}脚本配置：</h1>\n                <div className='table'>\n                    <Table columns={ConfigColumns} dataSource={configData} pagination={false} rowKey={record => record.name} />\n                </div>\n                <Divider dashed />\n                <div style={{ float: 'left' }}>\n                    <Space size={10}>\n                        <Button type=\"primary\" onClick={() => add(1)}>新增配置项</Button>\n                        <Button type=\"primary\">修改配置项</Button>\n                        <Button type=\"primary\">删除配置项</Button>\n                    </Space>\n                </div >\n                <div style={{ float: 'right' }}><Pagination showSizeChanger defaultCurrent={defaultCurrent} total={total} /></div>\n                <Divider dashed />\n            </div>\n            <Modal title={curModal ? '新增配置' : '新增脚本'} visible={isModalVisible} footer={null} onCancel={handleCancel} width={400} destroyOnClose={true}>\n                {curModal ? configModal : scriptModal}\n            </Modal>\n        </div>\n    </>\n    );\n}\n\nexport default Script","import { get, post, put } from \"./httpUtil\";\n\n//------------------------model api-----------------------\nexport const listModel = (p) => get('/trainModel', p);\nexport const addModel = (d) => post('/trainModel', d);\nexport const listModelZooByType = (p) => get('/model', p);\n\n//------------------------account api-----------------------\nexport const listAccount = (p) => get('/res/account', p);\nexport const addAccount = (d) => post('/res/account', d);\nexport const getAvailableAccount = (p) => get('/res/account/availableAccount', p);\n\n//------------------------device api-----------------------\nexport const listDevice = (p) => get('/res/device', p);\nexport const getAvailableDevice = (p) => get('/res/device/availableDevice', p);\n\n//------------------------task api-----------------------\nexport const listTask = (p) => get('/task', p);\nexport const addTask = (d) => post('/task', d);\n\n//------------------------subTask api-----------------------\nexport const listSubTask = (p) => get('/subTask', p);\nexport const addSubTask = (d) => post('/subTask', d);\n\n//------------------------script api-----------------------\nexport const listScript = (p) => get('/script', p);\nexport const addScript = (d) => post('/script', d);\nexport const updateScript = (d) => put('/script', d);\n\n//------------------------remark api-----------------------\nexport const listRemark=(p)=>get('/remark',p)","import React, { useState, useEffect } from 'react'\nimport {\n    Table, Pagination, Button, Space, Form, Input, Upload,\n    Modal, InputNumber, Radio, Select, message, Divider\n} from 'antd';\nimport { listModel, addModel, listModelZooByType } from '../../http/api';\n\nconst { Option } = Select;\nconst props = {\n    name: 'file',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n        authorization: 'authorization-text',\n    },\n    onChange(info) {\n        if (info.file.status !== 'uploading') {\n            console.log(info.file, info.fileList);\n        }\n        if (info.file.status === 'done') {\n            message.success(`${info.file.name} file uploaded successfully`);\n        } else if (info.file.status === 'error') {\n            message.error(`${info.file.name} file upload failed.`);\n        }\n    },\n};\nconst columns = [\n    {\n        title: 'id',\n        dataIndex: 'id',\n        key: 'id',\n    },\n    {\n        title: '名称',\n        dataIndex: 'name',\n        key: 'name',\n    }, {\n        title: '类型',\n        dataIndex: 'type',\n        key: 'type',\n        render: (type) => {\n            return type === 0 ? 'detection' : 'classification';\n        }\n    }, {\n        title: '训练类型数量',\n        dataIndex: 'numClass',\n        key: 'numClass',\n    }, {\n        title: '训练批次',\n        dataIndex: 'batchSize',\n        key: 'batchSize',\n    }, {\n        title: '上次训练时间',\n        dataIndex: 'lastTrainTime',\n        key: 'lastTrainTime',\n        render: (lastTrainTime) => {\n            return lastTrainTime != null ? lastTrainTime : '未训练';\n        }\n    }, {\n        title: '状态',\n        dataIndex: 'status',\n        key: 'status',\n        render: (status) => {\n            if (status === -1)\n                return '未训练';\n            else if (status === 0)\n                return '正常';\n            else if (status === 1)\n                return '正在训练中...'\n        }\n    }, {\n        title: 'csv查看',\n        dataIndex: 'veiwCsv',\n        key: 'veiwCsv',\n        render: (veiwCsv) => {\n            return veiwCsv != null ? veiwCsv : '请先上传文件'\n        }\n    }, {\n        title: '文件上传',\n        dataIndex: 'id',\n        key: 'id',\n        render: (id) => {\n            return <Upload><Button type=\"primary\">文件上传</Button></Upload>\n        }\n    }, {\n        title: '生成数据',\n        dataIndex: 'id',\n        key: 'id',\n        render: (id) => {\n            return <Button type=\"primary\">生成数据</Button>\n        }\n    }, {\n        title: '训练',\n        dataIndex: 'id',\n        key: 'id',\n        render: (id) => {\n            return <Button type=\"primary\">启动训练</Button>\n        }\n    },\n];\nconst Model = () => {\n    const [data, setData] = useState([]);\n    const [defaultCurrent, setDefaultCurrent] = useState(1);\n    const [total, setTotal] = useState(0);\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [type, setType] = useState(0);　//默认是detection,0:detection,1:classification\n    const [modelList, setModelList] = useState([]);\n\n    useEffect(() => {\n        queryData();\n    }, []);\n\n    //--------------------------------请求操作--------------------------------------------\n    const queryData = () => {\n        listModel().\n            then(res => setData(res.data));\n    }\n\n    const queryModelZoo = (type) => {\n        let params = { 'type': type };\n        listModelZooByType(params).then(res => setModelList(res.data));\n    }\n    //--------------------------------事件操作-------------------------------------------\n    const add = () => {\n        setIsModalVisible(true);\n        queryModelZoo(type);\n    }\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    }\n    const onFinish = (values) => {\n        values.type = type;\n        console.log(values);\n        addModel(values).then(res => {\n            if (res.flag === 0) {\n                message.success('新增成功')\n                setIsModalVisible(false);\n                queryData();\n            } else {\n                message.error(res.message);\n            }\n        });\n\n    }\n    const onFinishFailed = () => {\n        message.warn(\"你个b内容都没填完！\")\n    }\n    const onChange = (e) => {\n        let typeValue = e.target.value\n        setType(typeValue);\n        queryModelZoo(typeValue);\n    }\n    return (<div className='container'>\n        <div className='table'>\n            <Table columns={columns} dataSource={data} pagination={false} rowKey={record => record.id} />\n        </div>\n        <Divider dashed />\n        <div style={{ float: 'left' }}>\n            <Space size={10}>\n                <Button type=\"primary\" onClick={add}>新增</Button>\n                <Button type=\"primary\">修改</Button>\n                <Button type=\"primary\">删除</Button>\n            </Space>\n        </div>\n        <div style={{ float: 'right' }}>\n            <Pagination showSizeChanger defaultCurrent={defaultCurrent} total={total} />\n        </div>\n        <Modal title=\"新增\" visible={isModalVisible} footer={null} onCancel={handleCancel} width={400} destroyOnClose={true}>\n            <div style={{ textAlign: 'center' }}>\n                <Space size={10}>\n                    < label>模型类型:</label>\n                    <Radio.Group onChange={onChange} value={type}>\n                        <Radio value={0}>detection</Radio>\n                        <Radio value={1}>classification</Radio>\n                    </Radio.Group>\n                </Space>\n            </div>\n            <div style={{ marginTop: 47 }}>\n                <Form\n                    name=\"basic\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    initialValues={{ remember: true }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"模型\"\n                        name=\"modelId\"\n                        rules={[{ required: true, message: '模型必填!' }]}\n                    >\n                        <Select style={{ width: 210 }} allowClear>\n                            {modelList.map((m) => <Option value={m.id} key={m.id}>{m.name}</Option>)}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"名称\"\n                        name=\"name\"\n                        rules={[{ required: true, message: '训练名称必填!' }]}\n                    >\n                        < Input style={{ width: 210 }} />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"训练批次\"\n                        name=\"batchSize\"\n                        rules={[{ required: true, message: '训练批次必填!' }]}\n                    >\n                        < InputNumber min={1} max={10} />\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            新增\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        </Modal>\n    </div>);\n}\n\nexport default Model","import React from \"react\";\n\nconst Dashboard = () => {\n    return (\n        <div>this is Dashboard</div>\n    );\n}\n\nexport default Dashboard;","import React, { useState, useEffect } from 'react'\nimport {\n    Table, Pagination, Button, Space, Form, Input, Upload,\n    Modal, message, Divider, Select, Tag, Card\n} from 'antd';\nimport { listTask, addTask, getAvailableAccount, getAvailableDevice, listScript, listRemark } from '../../http/api';\n\nconst { Option } = Select;\nconst columns = [\n    {\n        title: 'id',\n        dataIndex: 'id',\n        key: 'id',\n    },\n    {\n        title: '脚本',\n        dataIndex: 'scriptName',\n        key: 'scriptName',\n    },\n    {\n        title: '设备数量',\n        dataIndex: 'deviceNum',\n        key: 'deviceNum',\n    },\n    {\n        title: '账号数量',\n        dataIndex: 'accountNum',\n        key: 'accountNum',\n    }, {\n        title: '状态',\n        dataIndex: 'status',\n        key: 'status',\n        render: (status) => {\n            return status === 0 ? '执行中...' : '已结束';\n        }\n    }, {\n        title: '配置',\n        dataIndex: 'config',\n        key: 'config',\n        render: (config) => {\n            return config != null ? config : '采用默认配置';\n        }\n    }, {\n        title: '创建时间',\n        dataIndex: 'createTime',\n        key: 'createTime',\n    }\n]\nconst AccountManage = () => {\n    const [data, setData] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [availableAccount, setAvailableAccount] = useState(0);\n    const [availableDevice, setAvailableDevice] = useState(0);\n    const [scriptList, setScriptList] = useState([]);\n    const [remark, setRemark] = useState([]);\n    const defaultCurrent = 1;\n    useEffect(() => {\n        queryData();\n        queryAvailableAccount();\n        queryAvailableDevice();\n    }, []);\n    //--------------------------------请求操作--------------------------------------------\n    const queryData = () => {\n        let param = {\n            \"taskType\": \"generalTask\"\n        }\n        listTask(param).then(res => {\n            if (res.flag === 0) {\n                setData(res.data);\n            } else {\n                message.error(res.message);\n            }\n        })\n    }\n    const queryAvailableAccount = () => {\n        getAvailableAccount().then(res => {\n            if (res.flag === 0) {\n                setAvailableAccount(res.data);\n            } else {\n                message.warn(res.message);\n            }\n        })\n    }\n    const queryAvailableDevice = () => {\n        getAvailableDevice().then(res => {\n            if (res.flag === 0) {\n                setAvailableDevice(res.data);\n            } else {\n                message.warn(res.message);\n            }\n        })\n    }\n    const queryRemark = () => {\n        listRemark.then(res => {\n            if (res.flag === 0) {\n                setRemark(res.data);\n            } else {\n                message.warn(res.message);\n            }\n        })\n    }\n    //--------------------------------事件操作--------------------------------------------\n    const add = () => {\n        if (availableAccount === 0 || availableDevice === 0)\n            return message.warn('当前无可用设备或账号');\n        setIsModalVisible(true);\n        listScript().then(\n            res => {\n                if (res.flag === 0) {\n                    setScriptList(res.data);\n                } else {\n                    message.warn('脚本获取异常');\n                }\n            }\n        );\n    }\n    const handleCancel = () => { setIsModalVisible(false) }\n    const onFinish = (values) => {\n        addTask(values).then(res => {\n            if (res.flag === 0) {\n                message.success(\"新增成功\");\n                setIsModalVisible(false);\n                queryData();\n            } else {\n                message.error(res.message);\n            }\n        })\n    }\n    return (<div className='container'>\n        <div>\n            <Space size={20}>\n                <Tag color=\"#f50\">可用账号数:{availableAccount}</Tag>\n                <Tag color=\"#2db7f5\">可用设备数:{availableDevice}</Tag>\n            </Space>\n        </div>\n        <Divider dashed />\n        <div style={{ height: '82%' }}><Table columns={columns} dataSource={data} pagination={false} rowKey={record => record.id} /></div>\n        <Divider dashed />\n        <div style={{ float: 'left' }}>\n            <Space size={10}>\n                <Button type=\"primary\" onClick={add}>新增</Button>\n                <Button type=\"primary\">修改</Button>\n                <Button type=\"primary\">删除</Button>\n            </Space>\n        </div>\n        <div style={{ float: 'right' }}>\n            <Pagination showSizeChanger defaultCurrent={defaultCurrent} total={total} />\n        </div>\n        <Modal title=\"新增\" visible={isModalVisible} footer={null} onCancel={handleCancel} width={400} destroyOnClose={true}>\n            <div style={{ marginTop: 5 }}>\n                <div style={{ textAlign: 'center' }}>\n                    <Space size={20}>\n                        <Tag color=\"#f50\">可用账号数:{availableAccount}</Tag>\n                        <Tag color=\"#2db7f5\">可用设备数:{availableDevice}</Tag>\n                    </Space>\n                </div>\n                <Divider dashed />\n                <Form\n                    name=\"basic\"\n                    labelCol={{ span: 7 }}\n                    wrapperCol={{ span: 15 }}\n                    initialValues={{ remember: true }}\n                    onFinish={onFinish}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"脚本\"\n                        name=\"scriptName\"\n                        rules={[{ required: true, message: '脚本必填!' }]}\n                    >\n                        <Select allowClear>\n                            {scriptList.map((s) => <Option value={s.name} key={s.id}>{s.name}</Option>)}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"设备数量\"\n                        name=\"deviceNum\"\n                        rules={[{ required: true, message: '设备数量必填!' }]}\n                    >\n                        <Input type={'number'} min={1} max={availableDevice} />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"账号数量\"\n                        name=\"accountNum\"\n                        rules={[{ required: true, message: '账号数量必填!' }]}\n                    >\n                        <Input type={'number'} min={1} max={availableAccount} />\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            新增\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        </Modal>\n    </div>);\n}\n\nexport default AccountManage;","import React, { useState, useEffect } from 'react'\nimport {\n    Table, Pagination, message, Divider\n} from 'antd';\nimport { listSubTask } from '../../http/api';\n\nconst columns = [\n    {\n        title: 'id',\n        dataIndex: 'id',\n        key: 'id',\n    },\n    {\n        title: 'serial',\n        dataIndex: 'serial',\n        key: 'serial',\n    },\n    {\n        title: '脚本',\n        dataIndex: 'scriptName',\n        key: 'scriptName',\n    },\n    {\n        title: '牌子',\n        dataIndex: 'brand',\n        key: 'brand',\n    },\n    {\n        title: 'mac地址',\n        dataIndex: 'mac',\n        key: 'mac',\n    }, {\n        title: 'ip地址',\n        dataIndex: 'ip',\n        key: 'ip'\n    }, {\n        title: '账号',\n        dataIndex: 'account',\n        key: 'account'\n    }, {\n        title: '密码',\n        dataIndex: 'password',\n        key: 'password',\n    }, {\n        title: '配置',\n        dataIndex: 'config',\n        key: 'config',\n        render: (config) => {\n            return config ? config : '暂无'\n        }\n    }, {\n        title: '创建时间',\n        dataIndex: 'createTime',\n        key: 'createTime'\n    }, {\n        title: '状态',\n        dataIndex: 'status',\n        key: 'status',\n        render: (status) => {\n            if (status === 0) {\n                return '已就绪';\n            } else if (status === 1) {\n                return '执行中';\n            } else if (status === 2) {\n                return '执行完毕';\n            } else {\n                return '未知状态,请联系管理员'\n            }\n        }\n    }, {\n        title: 'step',\n        dataIndex: 'step',\n        key: 'step',\n        render: (step) => {\n            return step ? step : '~~~'\n        }\n    }, {\n        title: '花费时间/小时',\n        dataIndex: 'takeTime',\n        key: 'takeTime',\n        render: (takeTime) => {\n            return takeTime ? takeTime : '~~~'\n        }\n    }, {\n        title: '结束时间',\n        dataIndex: 'overTime',\n        key: 'overTime',\n        render: (overTime) => {\n            return overTime ? overTime : '~~~'\n        }\n    }, {\n        title: '结果',\n        dataIndex: 'result',\n        key: 'result',\n        render: (result) => {\n            return result ? result : '~~~'\n        }\n    }\n]\nconst SubTask = () => {\n    const [data, setData] = useState([]);\n    const [total, setTotal] = useState(0);\n\n    const defaultCurrent = 1;\n    useEffect(() => {\n        queryData();\n    }, []);\n    //--------------------------------请求操作--------------------------------------------\n    const queryData = () => {\n        listSubTask().then(res => {\n            if (res.flag === 0) {\n                setData(res.data);\n            } else {\n                message.error(res.message);\n            }\n        })\n    }\n\n    //--------------------------------事件操作--------------------------------------------\n    return (<div className='container'>\n        <div className='table'><Table columns={columns} dataSource={data} pagination={false} rowKey={record => record.id} /></div>\n        <Divider dashed />\n        <div style={{ float: 'right' }}>\n            <Pagination showSizeChanger defaultCurrent={defaultCurrent} total={total} />\n        </div>\n    </div>);\n}\n\nexport default SubTask;","import React, { useState, useEffect } from 'react'\nimport {\n    Table, Pagination, Button, Space, message, Divider\n} from 'antd';\nimport { listDevice } from '../../http/api';\n\nconst columns = [\n    {\n        title: '设备id',\n        dataIndex: 'id',\n        key: 'id',\n    },\n    {\n        title: 'serial',\n        dataIndex: 'serial',\n        key: 'serial',\n    },\n    {\n        title: '状态',\n        dataIndex: 'status',\n        key: 'status',\n        render: (status) => {\n            return status === 0 ? '正常' : '异常';\n        }\n    },\n    , {\n        title: '最后修改时间',\n        dataIndex: 'lastUpdateTime',\n        key: 'lastUpdateTime',\n    }\n]\n\nconst Device = () => {\n    const [data, setData] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    //默认分页大小为20\n    const defaultSize = 20;\n    useEffect(() => {\n        queryData();\n    }, []);\n\n    const queryData = () => {\n        let params = {\n            'current': currentPage,\n            'size': defaultSize\n        }\n        listDevice(params).then(res => {\n            if (res.flag === 0) {\n                setData(res.data.records);\n                setCurrentPage(res.data.current);\n                setTotal(res.data.total);\n            } else {\n                message.error(res.message);\n            }\n        })\n    }\n\n    return (<div className='container'>\n        <div className='table'>\n            <Table columns={columns}\n                dataSource={data}\n                pagination={false}\n            />\n        </div>\n        <Divider dashed />\n        <div style={{ float: 'right' }}>\n            <Pagination showSizeChanger defaultCurrent={currentPage} total={total} />\n        </div>\n    </div>);\n}\n\nexport default Device;","import React, { useState, useEffect } from 'react'\nimport {\n    Table, Pagination, Button, Space, Form, Input,\n    Modal, message, Divider, Select, Upload\n} from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { listAccount, addAccount } from '../../http/api';\n\nconst { Option } = Select;\nconst columns = [\n    {\n        title: 'id',\n        dataIndex: 'id',\n        key: 'id',\n    },\n    {\n        title: '账号',\n        dataIndex: 'account',\n        key: 'account',\n    },\n    {\n        title: '类型',\n        dataIndex: 'type',\n        key: 'type',\n        render: (type) => {\n            return type ? '手机' : '邮箱';\n        }\n    },\n    {\n        title: '密码',\n        dataIndex: 'password',\n        key: 'password',\n    }, {\n        title: '状态',\n        dataIndex: 'status',\n        key: 'status',\n        render: (status) => {\n            return status === 0 ? '正常' : status === 1 ? '正在使用' : '不可使用';\n        }\n    }, {\n        title: '最后修改时间',\n        dataIndex: 'lastUpdateTime',\n        key: 'lastUpdateTime',\n    }\n]\nconst Account = () => {\n    const [data, setData] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    //默认分页大小为20\n    const defaultSize = 10;\n    useEffect(() => {\n        queryData();\n    }, []);\n    //--------------------------------请求操作--------------------------------------------\n    const queryData = () => {\n        let param = {\n            'page': currentPage,\n            'size': defaultSize\n        }\n        listAccount(param).then(res => {\n            if (res.flag === 0) {\n                setData(res.data.content);\n                setCurrentPage(res.data.number);\n                setTotal(res.data.totalElements);\n            } else {\n                message.error(res.message);\n            }\n        })\n    }\n\n    //--------------------------------事件操作--------------------------------------------\n    const add = () => {\n        setIsModalVisible(true);\n    }\n    const handleCancel = () => { setIsModalVisible(false) }\n    const onFinish = (values) => {\n        addAccount(values).then(res => {\n            if (res.flag === 0) {\n                message.success(\"新增成功\");\n                setIsModalVisible(false);\n                queryData();\n            } else {\n                message.error(res.message);\n            }\n        })\n    }\n    const props = {\n        name: 'file',\n        action: 'http://127.0.0.1:8080/res/account/upload',\n        headers: {\n            authorization: 'authorization-text',\n        },\n        onChange(info) {\n            if (info.file.status !== 'uploading') {\n                console.log(info.file, info.fileList);\n            }\n            if (info.file.status === 'done') {\n                message.success(`${info.file.name} file uploaded successfully`);\n            } else if (info.file.status === 'error') {\n                message.error(`${info.file.name} file upload failed.`);\n            }\n        },\n    };\n    return (\n        <div className='contaner'>\n            <div className='table'>\n                <Table columns={columns} dataSource={data} pagination={false} rowKey={record => record.id} />\n            </div>\n            <Divider dashed />\n            <div style={{ float: 'left' }}>\n                <Space size={10}>\n                    <Button type=\"primary\" onClick={add}>新增</Button>\n                    <Button type=\"primary\">修改</Button>\n                    <Button type=\"primary\">删除</Button>\n                    <Upload {...props}>\n                        <Button icon={<UploadOutlined />}>上传</Button>\n                    </Upload>\n                </Space>\n            </div>\n            <div style={{ float: 'right' }}>\n                <Pagination showSizeChanger defaultCurrent={currentPage} total={total} />\n            </div>\n            <Modal title=\"新增\" visible={isModalVisible} footer={null} onCancel={handleCancel} width={400} destroyOnClose={true}>\n                <div >\n                    <Form\n                        name=\"basic\"\n                        labelCol={{ span: 7 }}\n                        wrapperCol={{ span: 15 }}\n                        initialValues={{ remember: true }}\n                        onFinish={onFinish}\n                        autoComplete=\"off\"\n                    >\n                        <Form.Item\n                            label=\"账号类型\"\n                            name=\"type\"\n                            rules={[{ required: true, message: '账号类型必填!' }]}\n                        >\n                            <Select allowClear>\n                                <Option value={1}>邮箱</Option>\n                                <Option value={2}>手机号码</Option>\n                            </Select>\n                        </Form.Item>\n                        <Form.Item\n                            label=\"账号\"\n                            name=\"account\"\n                            rules={[{ required: true, message: '账号必填!' }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"密码\"\n                            name=\"password\"\n                            rules={[{ required: true, message: '密码必填!' }]}\n                        >\n                            < Input />\n                        </Form.Item>\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                新增\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </Modal>\n        </div>\n    );\n}\n\nexport default Account;","import React from \"react\";\nimport { Layout, Menu } from 'antd';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport ModelConfig from './model/Model'\nimport Script from './script/Script'\nimport Dashboard from './Dashboard'\nimport TaskManage from './task/TaskManage'\nimport SubTask from './task/SubTask'\nimport Device from './resources/Device'\nimport Account from './resources/Account'\n\nconst { Sider, Content, Footer } = Layout;\nconst { SubMenu } = Menu;\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    main: () => <Dashboard />\n  },\n  {\n    path: \"/dashboard\",\n    main: () => <Dashboard />\n  },\n  {\n    path: \"/modelConfig\",\n    main: () => <ModelConfig />\n  },\n  {\n    path: \"/scriptConfig\",\n    main: () => <Script />\n  },\n  {\n    path: \"/account\",\n    main: () => <Account />\n  },\n  {\n    path: \"/device\",\n    main: () => <Device />\n  },\n  {\n    path: \"/taskManage\",\n    main: () => <TaskManage />\n  },\n  {\n    path: \"/subTask\",\n    main: () => <SubTask />\n  }\n];\n\nexport default function Backhistory() {\n  return (\n    <Router>\n      <Layout>\n        <Sider\n          theme='light'>\n          <Menu\n            style={{ width: 192 }}\n            mode=\"inline\"\n          >\n            <Menu.Item key=\"dashboard\">\n              <Link to=\"/dashboard\">dashboard</Link>\n            </Menu.Item>\n\n            <SubMenu key=\"resources\" title=\"资源管理\">\n              <Menu.Item key=\"account\">\n                <Link to=\"/account\">账号管理</Link>\n              </Menu.Item>\n              <Menu.Item key=\"device\">\n                <Link to=\"/device\">设备管理</Link>\n              </Menu.Item>\n            </SubMenu>\n\n            <SubMenu key=\"mainManage\" title=\"任务管理\">\n              <Menu.Item key=\"task\">\n                <Link to=\"/taskManage\">任务管理</Link>\n              </Menu.Item>\n              <Menu.Item key=\"subTask\">\n                <Link to=\"/subTask\">子任务细节</Link>\n              </Menu.Item>\n            </SubMenu>\n\n            <SubMenu key=\"model\" title=\"模型管理\">\n              <Menu.Item key=\"modelConfig\">\n                <Link to=\"/modelConfig\">模型配置</Link>\n              </Menu.Item>\n            </SubMenu>\n\n            <SubMenu key=\"script\" title=\"脚本管理\">\n              <Menu.Item key=\"scriptConfig\">\n                <Link to=\"/scriptConfig\">脚本配置</Link>\n              </Menu.Item>\n            </SubMenu>\n\n          </Menu>\n        </Sider>\n\n        <Content style={{ height: '100vh', padding: '0 7px' }} >\n          <Switch>\n            {routes.map((route, index) => (\n              <Route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                children={<route.main />}\n              />\n            ))}\n          </Switch>\n        </Content>\n      </Layout>\n    </Router >\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './style/css/main.css';\nimport Backhistory from './pages/Backhistory';\n\nReactDOM.render(\n  <Backhistory />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}